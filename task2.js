function bubbleSort(arr){
	var a = arr.length;

	for(var q = 1; q < a; ++q) {
		for(i = 0; i < a - q; ++i) {
			if (arr[i] > arr[i + 1]) {
				var z = arr[i];
				arr[i] = arr[i + 1];
				arr[i + 1] = z;
			}
		}
	}
	return arr;
}

bubbleSort(arr);

/* 
Це звичайний бульбашковий алгоритм сортування,
але із оптимізованою довжиною бульбашки.
В зовнішньому циклі починаємо із q=1 заради того,
аби не проходити n ітерацію, яка є "холостою" і 
по факту в n-1 ітерації масив вже відсортований.  
*/

/*
Умова внутрішнього циклу i=a-q доволяє не враховувати
порівння двох елементів масиву, другий з яких
вже був відсортований в попердній ітераці циклу.
Дана оптимізація має плюси при роботі із великими масивами
*/